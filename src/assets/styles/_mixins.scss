@use 'sass:map';
@use 'sass:list';
@use 'sass:string';
@use 'sass:math';
@use 'sass:color';

@mixin mq($from, $to: false) {
  @if $to {
    @media (min-width: #{$from}px) and (max-width: #{$to}px) {
      @content;
    }
  } @else {
    @media (max-width: #{$from}px) {
      @content;
    }
  }
}

@function getcolor($str, $opacity: 1) {
  $color-array: string.split($str, '.');
  @if $opacity != 1 {
    @return color.change(
      map.get(map.get($colors, list.nth($color-array, 1)), list.nth($color-array, 2)),
      $alpha: $opacity
    );
  } @else {
    @return map.get(map.get($colors, list.nth($color-array, 1)), list.nth($color-array, 2));
  }
}

@function pxToRem($px) {
  $rem: calc(round(($px / 16) * 1000) / 1000);
  @return #{$rem}rem;
}

@function calcClamp($minPx, $maxPx) {
  $minRem: pxToRem($minPx);
  $maxRem: pxToRem($maxPx);

  $reminderMidValue: calc(($maxPx - 8) * 100 / 1440);
  $reminderMidValueRounded: calc(round($reminderMidValue * 1000) / 1000);

  @return clamp(#{$minRem}, 0.5rem + #{$reminderMidValueRounded}vi, #{$maxRem});
}
